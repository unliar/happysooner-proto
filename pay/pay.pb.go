// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: pay/pay.proto

package pay

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PayErrors int32

const (
	PayErrors_None                  PayErrors = 0       // 默认值
	PayErrors_PayWayNotFound        PayErrors = 2000001 // 支付不存在
	PayErrors_PayWayOperationFailed PayErrors = 2000002 // 操作失败
	PayErrors_CreateOrderFailed     PayErrors = 2000003 // 创建alipay支付订单失败
	PayErrors_UpdateOrderFailed     PayErrors = 2000004 // 更新支付宝订单失败
)

// Enum value maps for PayErrors.
var (
	PayErrors_name = map[int32]string{
		0:       "None",
		2000001: "PayWayNotFound",
		2000002: "PayWayOperationFailed",
		2000003: "CreateOrderFailed",
		2000004: "UpdateOrderFailed",
	}
	PayErrors_value = map[string]int32{
		"None":                  0,
		"PayWayNotFound":        2000001,
		"PayWayOperationFailed": 2000002,
		"CreateOrderFailed":     2000003,
		"UpdateOrderFailed":     2000004,
	}
)

func (x PayErrors) Enum() *PayErrors {
	p := new(PayErrors)
	*p = x
	return p
}

func (x PayErrors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayErrors) Descriptor() protoreflect.EnumDescriptor {
	return file_pay_pay_proto_enumTypes[0].Descriptor()
}

func (PayErrors) Type() protoreflect.EnumType {
	return &file_pay_pay_proto_enumTypes[0]
}

func (x PayErrors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayErrors.Descriptor instead.
func (PayErrors) EnumDescriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{0}
}

type UIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID int64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *UIDInput) Reset() {
	*x = UIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDInput) ProtoMessage() {}

func (x *UIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDInput.ProtoReflect.Descriptor instead.
func (*UIDInput) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{0}
}

func (x *UIDInput) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type PayWay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayWayID int64  `protobuf:"varint,1,opt,name=PayWayID,proto3" json:"PayWayID,omitempty"` // 用户支付id
	PayType  string `protobuf:"bytes,2,opt,name=PayType,proto3" json:"PayType,omitempty"`    // 支付类型
	PayValue string `protobuf:"bytes,3,opt,name=PayValue,proto3" json:"PayValue,omitempty"`  // 支付链接
	PayDesc  string `protobuf:"bytes,4,opt,name=PayDesc,proto3" json:"PayDesc,omitempty"`    // 支付描述
}

func (x *PayWay) Reset() {
	*x = PayWay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWay) ProtoMessage() {}

func (x *PayWay) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWay.ProtoReflect.Descriptor instead.
func (*PayWay) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{1}
}

func (x *PayWay) GetPayWayID() int64 {
	if x != nil {
		return x.PayWayID
	}
	return 0
}

func (x *PayWay) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayWay) GetPayValue() string {
	if x != nil {
		return x.PayValue
	}
	return ""
}

func (x *PayWay) GetPayDesc() string {
	if x != nil {
		return x.PayDesc
	}
	return ""
}

type CreateUserPayWayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayType  string `protobuf:"bytes,1,opt,name=PayType,proto3" json:"PayType,omitempty"`   // 支付类型
	PayValue string `protobuf:"bytes,2,opt,name=PayValue,proto3" json:"PayValue,omitempty"` // 支付链接
	PayDesc  string `protobuf:"bytes,3,opt,name=PayDesc,proto3" json:"PayDesc,omitempty"`   // 支付描述
	UID      int64  `protobuf:"varint,4,opt,name=UID,proto3" json:"UID,omitempty"`          // 用户id
}

func (x *CreateUserPayWayRequest) Reset() {
	*x = CreateUserPayWayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserPayWayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserPayWayRequest) ProtoMessage() {}

func (x *CreateUserPayWayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserPayWayRequest.ProtoReflect.Descriptor instead.
func (*CreateUserPayWayRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserPayWayRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *CreateUserPayWayRequest) GetPayValue() string {
	if x != nil {
		return x.PayValue
	}
	return ""
}

func (x *CreateUserPayWayRequest) GetPayDesc() string {
	if x != nil {
		return x.PayDesc
	}
	return ""
}

func (x *CreateUserPayWayRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type DeleteUserPayWayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      int64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`           // 用户id
	PayWayID int64 `protobuf:"varint,2,opt,name=PayWayID,proto3" json:"PayWayID,omitempty"` // 用户支付id
}

func (x *DeleteUserPayWayRequest) Reset() {
	*x = DeleteUserPayWayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserPayWayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserPayWayRequest) ProtoMessage() {}

func (x *DeleteUserPayWayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserPayWayRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserPayWayRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteUserPayWayRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *DeleteUserPayWayRequest) GetPayWayID() int64 {
	if x != nil {
		return x.PayWayID
	}
	return 0
}

type PutUserPayWayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      int64  `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`           // 用户id
	PayWayID int64  `protobuf:"varint,2,opt,name=PayWayID,proto3" json:"PayWayID,omitempty"` // 用户支付id
	PayType  string `protobuf:"bytes,3,opt,name=PayType,proto3" json:"PayType,omitempty"`    // 支付类型
	PayValue string `protobuf:"bytes,4,opt,name=PayValue,proto3" json:"PayValue,omitempty"`  // 支付链接
	PayDesc  string `protobuf:"bytes,5,opt,name=PayDesc,proto3" json:"PayDesc,omitempty"`    // 支付描述
}

func (x *PutUserPayWayRequest) Reset() {
	*x = PutUserPayWayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserPayWayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserPayWayRequest) ProtoMessage() {}

func (x *PutUserPayWayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserPayWayRequest.ProtoReflect.Descriptor instead.
func (*PutUserPayWayRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{4}
}

func (x *PutUserPayWayRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *PutUserPayWayRequest) GetPayWayID() int64 {
	if x != nil {
		return x.PayWayID
	}
	return 0
}

func (x *PutUserPayWayRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PutUserPayWayRequest) GetPayValue() string {
	if x != nil {
		return x.PayValue
	}
	return ""
}

func (x *PutUserPayWayRequest) GetPayDesc() string {
	if x != nil {
		return x.PayDesc
	}
	return ""
}

type UserPayWays struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayWays []*PayWay `protobuf:"bytes,1,rep,name=PayWays,proto3" json:"PayWays,omitempty"` // 支付方式
}

func (x *UserPayWays) Reset() {
	*x = UserPayWays{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPayWays) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPayWays) ProtoMessage() {}

func (x *UserPayWays) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPayWays.ProtoReflect.Descriptor instead.
func (*UserPayWays) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{5}
}

func (x *UserPayWays) GetPayWays() []*PayWay {
	if x != nil {
		return x.PayWays
	}
	return nil
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorInfo PayErrors `protobuf:"varint,1,opt,name=ErrorInfo,proto3,enum=pay.PayErrors" json:"ErrorInfo,omitempty"` // 错误信息
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorResponse) GetErrorInfo() PayErrors {
	if x != nil {
		return x.ErrorInfo
	}
	return PayErrors_None
}

type CreateOrderCommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateUserID      int64  `protobuf:"varint,1,opt,name=CreateUserID,proto3" json:"CreateUserID,omitempty"`          // 创建订单用户ID
	OrderType         string `protobuf:"bytes,2,opt,name=OrderType,proto3" json:"OrderType,omitempty"`                 // 创建订单的类型 = article
	CreateForUserID   int64  `protobuf:"varint,3,opt,name=CreateForUserID,proto3" json:"CreateForUserID,omitempty"`    // 当前订单是为谁创建的 不传的话默认是1号用户 也就是可爱的管理员同志
	TotalAmount       string `protobuf:"bytes,4,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`             // 订单总金额 金额默认是字符串 1.11 人民币
	Subject           string `protobuf:"bytes,5,opt,name=Subject,proto3" json:"Subject,omitempty"`                     // 订单标题
	OrderExtends      string `protobuf:"bytes,6,opt,name=OrderExtends,proto3" json:"OrderExtends,omitempty"`           // 订单额外参数 对应的是订单类型的value
	OrderPlatform     string `protobuf:"bytes,7,opt,name=OrderPlatform,proto3" json:"OrderPlatform,omitempty"`         // 订单平台 alipay = 支付宝支付  wxpay = 微信支付
	OrderPlatformMode string `protobuf:"bytes,8,opt,name=OrderPlatformMode,proto3" json:"OrderPlatformMode,omitempty"` // 订单平台的支付模式 alipay = 当面付 alipayweb = 电脑网站支付  alipaywap = 手机网站支付
	QuitURL           string `protobuf:"bytes,9,opt,name=QuitURL,proto3" json:"QuitURL,omitempty"`                     // 支付宝 wap支付订单退出页面
	ReturnURL         string `protobuf:"bytes,10,opt,name=ReturnURL,proto3" json:"ReturnURL,omitempty"`                // 支付宝 wap支付订单成功支付页面
	OpenID            string `protobuf:"bytes,11,opt,name=OpenID,proto3" json:"OpenID,omitempty"`                      // 用户识别ID          【微信jsapi必传】 必传
	ClientIP          string `protobuf:"bytes,12,opt,name=ClientIP,proto3" json:"ClientIP,omitempty"`                  // 创建订单的客户端IP   【微信必传】
}

func (x *CreateOrderCommonRequest) Reset() {
	*x = CreateOrderCommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderCommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderCommonRequest) ProtoMessage() {}

func (x *CreateOrderCommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderCommonRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderCommonRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{7}
}

func (x *CreateOrderCommonRequest) GetCreateUserID() int64 {
	if x != nil {
		return x.CreateUserID
	}
	return 0
}

func (x *CreateOrderCommonRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetCreateForUserID() int64 {
	if x != nil {
		return x.CreateForUserID
	}
	return 0
}

func (x *CreateOrderCommonRequest) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetOrderExtends() string {
	if x != nil {
		return x.OrderExtends
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetOrderPlatform() string {
	if x != nil {
		return x.OrderPlatform
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetOrderPlatformMode() string {
	if x != nil {
		return x.OrderPlatformMode
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetQuitURL() string {
	if x != nil {
		return x.QuitURL
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetReturnURL() string {
	if x != nil {
		return x.ReturnURL
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetOpenID() string {
	if x != nil {
		return x.OpenID
	}
	return ""
}

func (x *CreateOrderCommonRequest) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type PayOrderResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo string `protobuf:"bytes,1,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"` // 商户的订单号
	Status     string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`         // 订单状态 wait_pay trade_success trade_close trade_done
	RawData    string `protobuf:"bytes,3,opt,name=RawData,proto3" json:"RawData,omitempty"`       // 回调的原始参数表单参数
}

func (x *PayOrderResultRequest) Reset() {
	*x = PayOrderResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderResultRequest) ProtoMessage() {}

func (x *PayOrderResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderResultRequest.ProtoReflect.Descriptor instead.
func (*PayOrderResultRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{8}
}

func (x *PayOrderResultRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayOrderResultRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayOrderResultRequest) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

type OrderResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`                 // 错误代码
	Msg          string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`                   // 错误信息
	OutTradeNo   string `protobuf:"bytes,3,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`     // 商户的订单号
	QRCode       string `protobuf:"bytes,4,opt,name=QRCode,proto3" json:"QRCode,omitempty"`             // 订单的二维码链接
	Sign         string `protobuf:"bytes,5,opt,name=Sign,proto3" json:"Sign,omitempty"`                 // 签名
	TradeStatus  string `protobuf:"bytes,6,opt,name=TradeStatus,proto3" json:"TradeStatus,omitempty"`   // 交易状态
	TradeNo      string `protobuf:"bytes,7,opt,name=TradeNo,proto3" json:"TradeNo,omitempty"`           // 支付宝交易号
	TotalAmount  string `protobuf:"bytes,8,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`   // 订单总金额
	BuyerLogonID string `protobuf:"bytes,9,opt,name=BuyerLogonID,proto3" json:"BuyerLogonID,omitempty"` // 用户支付宝ID
}

func (x *OrderResultResponse) Reset() {
	*x = OrderResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResultResponse) ProtoMessage() {}

func (x *OrderResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResultResponse.ProtoReflect.Descriptor instead.
func (*OrderResultResponse) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{9}
}

func (x *OrderResultResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderResultResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderResultResponse) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *OrderResultResponse) GetQRCode() string {
	if x != nil {
		return x.QRCode
	}
	return ""
}

func (x *OrderResultResponse) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *OrderResultResponse) GetTradeStatus() string {
	if x != nil {
		return x.TradeStatus
	}
	return ""
}

func (x *OrderResultResponse) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *OrderResultResponse) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *OrderResultResponse) GetBuyerLogonID() string {
	if x != nil {
		return x.BuyerLogonID
	}
	return ""
}

type GetOrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCreateByUID  string `protobuf:"bytes,1,opt,name=OrderCreateByUID,proto3" json:"OrderCreateByUID,omitempty"`   // 创建订单用户ID
	OrderType         string `protobuf:"bytes,2,opt,name=OrderType,proto3" json:"OrderType,omitempty"`                 // 创建订单的类型 , 当前只有打赏类型
	OrdercreateForUID string `protobuf:"bytes,3,opt,name=OrdercreateForUID,proto3" json:"OrdercreateForUID,omitempty"` // 当前订单是为谁创建的 不传的话默认是1号用户 也就是可爱的管理员同志
	Page              int64  `protobuf:"varint,4,opt,name=Page,proto3" json:"Page,omitempty"`                          // 页码
	Size              int64  `protobuf:"varint,5,opt,name=Size,proto3" json:"Size,omitempty"`                          // 数量
	Status            string `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"`                       // 订单状态
	OrderPlatForm     string `protobuf:"bytes,7,opt,name=OrderPlatForm,proto3" json:"OrderPlatForm,omitempty"`         // 平台
	OrderExtends      string `protobuf:"bytes,9,opt,name=OrderExtends,proto3" json:"OrderExtends,omitempty"`           // 订单扩展字段
}

func (x *GetOrderListRequest) Reset() {
	*x = GetOrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListRequest) ProtoMessage() {}

func (x *GetOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListRequest.ProtoReflect.Descriptor instead.
func (*GetOrderListRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{10}
}

func (x *GetOrderListRequest) GetOrderCreateByUID() string {
	if x != nil {
		return x.OrderCreateByUID
	}
	return ""
}

func (x *GetOrderListRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *GetOrderListRequest) GetOrdercreateForUID() string {
	if x != nil {
		return x.OrdercreateForUID
	}
	return ""
}

func (x *GetOrderListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetOrderListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetOrderListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderListRequest) GetOrderPlatForm() string {
	if x != nil {
		return x.OrderPlatForm
	}
	return ""
}

func (x *GetOrderListRequest) GetOrderExtends() string {
	if x != nil {
		return x.OrderExtends
	}
	return ""
}

type OrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo   string `protobuf:"bytes,1,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`      //　商户的订单号
	Status       string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`              //  订单状态
	PlatForm     string `protobuf:"bytes,3,opt,name=PlatForm,proto3" json:"PlatForm,omitempty"`          //  订单的平台
	Type         string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`                  //  订单的类型
	CreateByUID  string `protobuf:"bytes,5,opt,name=CreateByUID,proto3" json:"CreateByUID,omitempty"`    //  订单创建人
	CreateForUID string `protobuf:"bytes,6,opt,name=CreateForUID,proto3" json:"CreateForUID,omitempty"`  //  订单创建对象人
	Extends      string `protobuf:"bytes,7,opt,name=Extends,proto3" json:"Extends,omitempty"`            //  订单扩展
	Amount       string `protobuf:"bytes,8,opt,name=Amount,proto3" json:"Amount,omitempty"`              //  订单金额
	CreatedAt    int64  `protobuf:"varint,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`       //  订单创建时间
	Expired      bool   `protobuf:"varint,10,opt,name=Expired,proto3" json:"Expired,omitempty"`          //  订单是否失效 - 目前是90分钟
	QRCode       string `protobuf:"bytes,11,opt,name=QRCode,proto3" json:"QRCode,omitempty"`             //  订单的二维码
	PlatFormMode string `protobuf:"bytes,12,opt,name=PlatFormMode,proto3" json:"PlatFormMode,omitempty"` //  订单平台的模式
}

func (x *OrderInfo) Reset() {
	*x = OrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfo) ProtoMessage() {}

func (x *OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfo.ProtoReflect.Descriptor instead.
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{11}
}

func (x *OrderInfo) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *OrderInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderInfo) GetPlatForm() string {
	if x != nil {
		return x.PlatForm
	}
	return ""
}

func (x *OrderInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderInfo) GetCreateByUID() string {
	if x != nil {
		return x.CreateByUID
	}
	return ""
}

func (x *OrderInfo) GetCreateForUID() string {
	if x != nil {
		return x.CreateForUID
	}
	return ""
}

func (x *OrderInfo) GetExtends() string {
	if x != nil {
		return x.Extends
	}
	return ""
}

func (x *OrderInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OrderInfo) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *OrderInfo) GetQRCode() string {
	if x != nil {
		return x.QRCode
	}
	return ""
}

func (x *OrderInfo) GetPlatFormMode() string {
	if x != nil {
		return x.PlatFormMode
	}
	return ""
}

type OrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*OrderInfo `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // 订单列表
}

func (x *OrderListResponse) Reset() {
	*x = OrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListResponse) ProtoMessage() {}

func (x *OrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListResponse.ProtoReflect.Descriptor instead.
func (*OrderListResponse) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{12}
}

func (x *OrderListResponse) GetList() []*OrderInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetSponsorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`                 //  订单的类型
	CreateByUID  string `protobuf:"bytes,2,opt,name=CreateByUID,proto3" json:"CreateByUID,omitempty"`   //  订单创建人
	CreateForUID string `protobuf:"bytes,3,opt,name=CreateForUID,proto3" json:"CreateForUID,omitempty"` //  创建对象
	Extends      string `protobuf:"bytes,4,opt,name=Extends,proto3" json:"Extends,omitempty"`           //  类型对应扩展值
}

func (x *GetSponsorsRequest) Reset() {
	*x = GetSponsorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSponsorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSponsorsRequest) ProtoMessage() {}

func (x *GetSponsorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSponsorsRequest.ProtoReflect.Descriptor instead.
func (*GetSponsorsRequest) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{13}
}

func (x *GetSponsorsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetSponsorsRequest) GetCreateByUID() string {
	if x != nil {
		return x.CreateByUID
	}
	return ""
}

func (x *GetSponsorsRequest) GetCreateForUID() string {
	if x != nil {
		return x.CreateForUID
	}
	return ""
}

func (x *GetSponsorsRequest) GetExtends() string {
	if x != nil {
		return x.Extends
	}
	return ""
}

type StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // 数值列表
}

func (x *StringList) Reset() {
	*x = StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_pay_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_pay_pay_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_pay_pay_proto_rawDescGZIP(), []int{14}
}

func (x *StringList) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

var File_pay_pay_proto protoreflect.FileDescriptor

var file_pay_pay_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x2f, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x70, 0x61, 0x79, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55,
	0x49, 0x44, 0x22, 0x74, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x61, 0x79, 0x44, 0x65, 0x73, 0x63, 0x22, 0x7b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x55, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x49, 0x44, 0x22, 0x94,
	0x01, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x22, 0x34, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x79, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x57,
	0x61, 0x79, 0x52, 0x07, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x73, 0x22, 0x3d, 0x0a, 0x0d, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa6, 0x03, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x51, 0x75, 0x69, 0x74, 0x55,
	0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x51, 0x75, 0x69, 0x74, 0x55, 0x52,
	0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x52, 0x4c, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x50, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x50, 0x22, 0x69, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x22, 0x89,
	0x02, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x97, 0x02, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x79, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x88, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x7a, 0x0a, 0x09,
	0x50, 0x61, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x81, 0x89, 0x7a, 0x12, 0x1b, 0x0a, 0x15, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x82, 0x89, 0x7a, 0x12, 0x17, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x83, 0x89, 0x7a, 0x12,
	0x17, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x10, 0x84, 0x89, 0x7a, 0x32, 0xa0, 0x05, 0x0a, 0x05, 0x70, 0x61, 0x79,
	0x53, 0x56, 0x12, 0x2f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x10, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79,
	0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x12,
	0x1c, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x70, 0x61, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x50, 0x75, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x79,
	0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x70,
	0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70,
	0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72,
	0x73, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x6e, 0x73,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x61, 0x79,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pay_pay_proto_rawDescOnce sync.Once
	file_pay_pay_proto_rawDescData = file_pay_pay_proto_rawDesc
)

func file_pay_pay_proto_rawDescGZIP() []byte {
	file_pay_pay_proto_rawDescOnce.Do(func() {
		file_pay_pay_proto_rawDescData = protoimpl.X.CompressGZIP(file_pay_pay_proto_rawDescData)
	})
	return file_pay_pay_proto_rawDescData
}

var file_pay_pay_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pay_pay_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pay_pay_proto_goTypes = []interface{}{
	(PayErrors)(0),                   // 0: pay.PayErrors
	(*UIDInput)(nil),                 // 1: pay.UIDInput
	(*PayWay)(nil),                   // 2: pay.PayWay
	(*CreateUserPayWayRequest)(nil),  // 3: pay.CreateUserPayWayRequest
	(*DeleteUserPayWayRequest)(nil),  // 4: pay.DeleteUserPayWayRequest
	(*PutUserPayWayRequest)(nil),     // 5: pay.PutUserPayWayRequest
	(*UserPayWays)(nil),              // 6: pay.UserPayWays
	(*ErrorResponse)(nil),            // 7: pay.ErrorResponse
	(*CreateOrderCommonRequest)(nil), // 8: pay.CreateOrderCommonRequest
	(*PayOrderResultRequest)(nil),    // 9: pay.PayOrderResultRequest
	(*OrderResultResponse)(nil),      // 10: pay.OrderResultResponse
	(*GetOrderListRequest)(nil),      // 11: pay.GetOrderListRequest
	(*OrderInfo)(nil),                // 12: pay.OrderInfo
	(*OrderListResponse)(nil),        // 13: pay.OrderListResponse
	(*GetSponsorsRequest)(nil),       // 14: pay.GetSponsorsRequest
	(*StringList)(nil),               // 15: pay.StringList
}
var file_pay_pay_proto_depIdxs = []int32{
	2,  // 0: pay.UserPayWays.PayWays:type_name -> pay.PayWay
	0,  // 1: pay.ErrorResponse.ErrorInfo:type_name -> pay.PayErrors
	12, // 2: pay.OrderListResponse.List:type_name -> pay.OrderInfo
	1,  // 3: pay.paySV.GetPayInfo:input_type -> pay.UIDInput
	3,  // 4: pay.paySV.CreateUserPayWay:input_type -> pay.CreateUserPayWayRequest
	4,  // 5: pay.paySV.DeleteUserPayWay:input_type -> pay.DeleteUserPayWayRequest
	5,  // 6: pay.paySV.PutUserPayWay:input_type -> pay.PutUserPayWayRequest
	8,  // 7: pay.paySV.CreatePayOrder:input_type -> pay.CreateOrderCommonRequest
	9,  // 8: pay.paySV.UpdatePayOrderResult:input_type -> pay.PayOrderResultRequest
	11, // 9: pay.paySV.GetOrderList:input_type -> pay.GetOrderListRequest
	9,  // 10: pay.paySV.GetOrderDetail:input_type -> pay.PayOrderResultRequest
	9,  // 11: pay.paySV.GetOrderPlatFormStatus:input_type -> pay.PayOrderResultRequest
	14, // 12: pay.paySV.GetSponsors:input_type -> pay.GetSponsorsRequest
	6,  // 13: pay.paySV.GetPayInfo:output_type -> pay.UserPayWays
	7,  // 14: pay.paySV.CreateUserPayWay:output_type -> pay.ErrorResponse
	7,  // 15: pay.paySV.DeleteUserPayWay:output_type -> pay.ErrorResponse
	7,  // 16: pay.paySV.PutUserPayWay:output_type -> pay.ErrorResponse
	10, // 17: pay.paySV.CreatePayOrder:output_type -> pay.OrderResultResponse
	7,  // 18: pay.paySV.UpdatePayOrderResult:output_type -> pay.ErrorResponse
	13, // 19: pay.paySV.GetOrderList:output_type -> pay.OrderListResponse
	12, // 20: pay.paySV.GetOrderDetail:output_type -> pay.OrderInfo
	12, // 21: pay.paySV.GetOrderPlatFormStatus:output_type -> pay.OrderInfo
	15, // 22: pay.paySV.GetSponsors:output_type -> pay.StringList
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pay_pay_proto_init() }
func file_pay_pay_proto_init() {
	if File_pay_pay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pay_pay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserPayWayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserPayWayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUserPayWayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPayWays); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderCommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSponsorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_pay_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pay_pay_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pay_pay_proto_goTypes,
		DependencyIndexes: file_pay_pay_proto_depIdxs,
		EnumInfos:         file_pay_pay_proto_enumTypes,
		MessageInfos:      file_pay_pay_proto_msgTypes,
	}.Build()
	File_pay_pay_proto = out.File
	file_pay_pay_proto_rawDesc = nil
	file_pay_pay_proto_goTypes = nil
	file_pay_pay_proto_depIdxs = nil
}
