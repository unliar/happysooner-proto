syntax = "proto3";

package push;
// option go_package = "github.com/unliar/happysooner-proto/v2/push";

enum SendType {
    NoneSendType                        = 0; // 默认值
    Mail                                = 1; // 邮箱
    Phone                               = 2; // 手机
}

message PushCaptchaRequest {
    string Code                         = 1; // 验证码
    string Sender                       = 2; // 发送人
    SendType Type                       = 3; // 发送类型
    int64 UID                           = 4; // 被发送人的UID
    string Account                      = 5; // 被发送人的账户
    string NationCode                   = 6; // 手机号区号
}

enum PushErrors {
    None                                = 0;        // 默认值
    PushCommonError                     = 2000001;  // 通用error
}

message ErrorResponse {
    PushErrors ErrorInfo                = 1; // 错误信息
}
message PushEmailNotificationRequest {
    string  To                          = 1; // 发送到
    string  Html                        = 2; // 发送内容
    string  Subject                     = 3; // 主题内容
}
message GetCaptchaVerifyRequest {
    string Code                         = 1; // 验证码
    string Account                      = 2; // 被发送人的账户
    int64 UID                           = 3; // 被发送人的UID
    SendType Type                       = 4; // 验证类型
}

message StoreOrderMailRequest {
    string OrderID                      = 1; // 来源订单
    string HTML                         = 2; // 邮件信息
    string ExpireIn                     = 3; // 有效时间
}

message PushWechatWorkGroupRobotNotificationRequest {
    string Content                      = 1; // 内容信息
    int64 Retry                         = 2; // 重试次数
}

message PushWechatTemplateMessageRequest {
    string ToUser                       = 1; // 用户的OpenID 
    string Type                         = 2; // 默认微信 mp
    string URL                          = 3; // 模板消息地址
    string Data                         = 4; // 数据消息 
}

service pushSV {
    
    // 发送验证码
    rpc PushCaptcha(PushCaptchaRequest) returns (ErrorResponse);
    
    // 校验验证码
    rpc GetCaptchaVerify(GetCaptchaVerifyRequest) returns (ErrorResponse);

    // 发送邮件通知
    rpc PushEmailNotification(PushEmailNotificationRequest) returns (ErrorResponse);

    // 存储订单临时邮件信息
    rpc StoreOrderMail (StoreOrderMailRequest) returns (ErrorResponse);

    // 消费订单邮件信息
    rpc PostOrderMail (StoreOrderMailRequest) returns (ErrorResponse);

    // 发送微信机器人通知
    rpc PushWechatWorkGroupRobotNotification (PushWechatWorkGroupRobotNotificationRequest) returns (ErrorResponse);

    // 发送公众号模板消息
    rpc PushWechatTemplateMessage (PushWechatTemplateMessageRequest) returns (ErrorResponse);

}