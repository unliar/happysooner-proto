// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: writing/writing.proto

// 内容创作模块

package writing

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// --------------------------response  start-----------------------------
type WritingErrors int32

const (
	WritingErrors_None                  WritingErrors = 0       // 默认值
	WritingErrors_ArticleNotFound       WritingErrors = 3000001 // 文章不存在
	WritingErrors_PostArticleFailed     WritingErrors = 3000002 // 创建文章失败
	WritingErrors_PostCategoryFailed    WritingErrors = 3000003 // 创建分类失败
	WritingErrors_PutArticleFailed      WritingErrors = 3000004 // 更新文章失败
	WritingErrors_OperationNotPermitted WritingErrors = 3000006 // 用户无权限进行操作
	WritingErrors_PostCommentFailed     WritingErrors = 3000007 // 发表评论失败
	WritingErrors_DelCommentFailed      WritingErrors = 3000008 // 删除评论失败
	WritingErrors_PostContentForbidden  WritingErrors = 3000009 // 内容触发文本审核策略
)

// Enum value maps for WritingErrors.
var (
	WritingErrors_name = map[int32]string{
		0:       "None",
		3000001: "ArticleNotFound",
		3000002: "PostArticleFailed",
		3000003: "PostCategoryFailed",
		3000004: "PutArticleFailed",
		3000006: "OperationNotPermitted",
		3000007: "PostCommentFailed",
		3000008: "DelCommentFailed",
		3000009: "PostContentForbidden",
	}
	WritingErrors_value = map[string]int32{
		"None":                  0,
		"ArticleNotFound":       3000001,
		"PostArticleFailed":     3000002,
		"PostCategoryFailed":    3000003,
		"PutArticleFailed":      3000004,
		"OperationNotPermitted": 3000006,
		"PostCommentFailed":     3000007,
		"DelCommentFailed":      3000008,
		"PostContentForbidden":  3000009,
	}
)

func (x WritingErrors) Enum() *WritingErrors {
	p := new(WritingErrors)
	*p = x
	return p
}

func (x WritingErrors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WritingErrors) Descriptor() protoreflect.EnumDescriptor {
	return file_writing_writing_proto_enumTypes[0].Descriptor()
}

func (WritingErrors) Type() protoreflect.EnumType {
	return &file_writing_writing_proto_enumTypes[0]
}

func (x WritingErrors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WritingErrors.Descriptor instead.
func (WritingErrors) EnumDescriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{0}
}

type ArticleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                 // 文章id
	Title      string      `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`            // 文章标题
	Summary    string      `protobuf:"bytes,3,opt,name=Summary,proto3" json:"Summary,omitempty"`        // 文章摘要
	Tags       []*Tag      `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`              // 标签列表
	CreatedAt  int64       `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`   // 创建时间
	Status     int64       `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`         // 状态
	Content    string      `protobuf:"bytes,7,opt,name=Content,proto3" json:"Content,omitempty"`        // 文章主体内容
	Category   *Category   `protobuf:"bytes,8,opt,name=Category,proto3" json:"Category,omitempty"`      // 文章分类
	CountInfo  *CountInfo  `protobuf:"bytes,9,opt,name=CountInfo,proto3" json:"CountInfo,omitempty"`    // 数据统计信息
	AuthorInfo *AuthorInfo `protobuf:"bytes,10,opt,name=AuthorInfo,proto3" json:"AuthorInfo,omitempty"` // 作者信息
}

func (x *ArticleInfo) Reset() {
	*x = ArticleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo) ProtoMessage() {}

func (x *ArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ArticleInfo) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArticleInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ArticleInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ArticleInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleInfo) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ArticleInfo) GetCountInfo() *CountInfo {
	if x != nil {
		return x.CountInfo
	}
	return nil
}

func (x *ArticleInfo) GetAuthorInfo() *AuthorInfo {
	if x != nil {
		return x.AuthorInfo
	}
	return nil
}

// Tag解构体
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`  // tag标签
	Tag string `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"` // tag名称
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{2}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// 数据统计信息
type CountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment  int64 `protobuf:"varint,1,opt,name=Comment,proto3" json:"Comment,omitempty"`   // 评论
	Like     int64 `protobuf:"varint,2,opt,name=Like,proto3" json:"Like,omitempty"`         // 喜欢
	Collect  int64 `protobuf:"varint,3,opt,name=Collect,proto3" json:"Collect,omitempty"`   // 收藏
	DisLike  int64 `protobuf:"varint,4,opt,name=DisLike,proto3" json:"DisLike,omitempty"`   // 不喜欢
	PageView int64 `protobuf:"varint,5,opt,name=PageView,proto3" json:"PageView,omitempty"` // 浏览量
}

func (x *CountInfo) Reset() {
	*x = CountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountInfo) ProtoMessage() {}

func (x *CountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountInfo.ProtoReflect.Descriptor instead.
func (*CountInfo) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{3}
}

func (x *CountInfo) GetComment() int64 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *CountInfo) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *CountInfo) GetCollect() int64 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *CountInfo) GetDisLike() int64 {
	if x != nil {
		return x.DisLike
	}
	return 0
}

func (x *CountInfo) GetPageView() int64 {
	if x != nil {
		return x.PageView
	}
	return 0
}

// 作者信息
type AuthorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      int64  `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`          // 作者id
	Nickname string `protobuf:"bytes,2,opt,name=Nickname,proto3" json:"Nickname,omitempty"` // 作者昵称
	Avatar   string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`     // 作者头像
}

func (x *AuthorInfo) Reset() {
	*x = AuthorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorInfo) ProtoMessage() {}

func (x *AuthorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorInfo.ProtoReflect.Descriptor instead.
func (*AuthorInfo) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorInfo) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *AuthorInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AuthorInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 文章类别
type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` // 类别id
	CN string `protobuf:"bytes,2,opt,name=CN,proto3" json:"CN,omitempty"`  // 类别中文
	EN string `protobuf:"bytes,3,opt,name=EN,proto3" json:"EN,omitempty"`  // 类别英文
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{5}
}

func (x *Category) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetCN() string {
	if x != nil {
		return x.CN
	}
	return ""
}

func (x *Category) GetEN() string {
	if x != nil {
		return x.EN
	}
	return ""
}

type CommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64        `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                            // 评论id
	Content          string       `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`                   // 评论内容
	CommentUserInfo  *AuthorInfo  `protobuf:"bytes,3,opt,name=CommentUserInfo,proto3" json:"CommentUserInfo,omitempty"`   // 评论人信息
	ReplyCommentInfo *CommentInfo `protobuf:"bytes,4,opt,name=ReplyCommentInfo,proto3" json:"ReplyCommentInfo,omitempty"` // 回复评论信息
	CreatedAt        int64        `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`              // 评论时间
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{6}
}

func (x *CommentInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfo) GetCommentUserInfo() *AuthorInfo {
	if x != nil {
		return x.CommentUserInfo
	}
	return nil
}

func (x *CommentInfo) GetReplyCommentInfo() *CommentInfo {
	if x != nil {
		return x.ReplyCommentInfo
	}
	return nil
}

func (x *CommentInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetArticleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleID  int64 `protobuf:"varint,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`   // 文章ID
	RequestUID int64 `protobuf:"varint,2,opt,name=RequestUID,proto3" json:"RequestUID,omitempty"` // 发起请求的用户ID
}

func (x *GetArticleByIdRequest) Reset() {
	*x = GetArticleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleByIdRequest) ProtoMessage() {}

func (x *GetArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{7}
}

func (x *GetArticleByIdRequest) GetArticleID() int64 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

func (x *GetArticleByIdRequest) GetRequestUID() int64 {
	if x != nil {
		return x.RequestUID
	}
	return 0
}

type PostArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryID int64  `protobuf:"varint,1,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"` // 分类id
	Title      string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`            // 标题
	Content    string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`        // 内容
	AuthorUID  int64  `protobuf:"varint,4,opt,name=AuthorUID,proto3" json:"AuthorUID,omitempty"`   // 作者id
	Summary    string `protobuf:"bytes,5,opt,name=Summary,proto3" json:"Summary,omitempty"`        // 摘要
	Status     int64  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`         // 文章状态 1 = 正常
}

func (x *PostArticleRequest) Reset() {
	*x = PostArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostArticleRequest) ProtoMessage() {}

func (x *PostArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostArticleRequest.ProtoReflect.Descriptor instead.
func (*PostArticleRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{8}
}

func (x *PostArticleRequest) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *PostArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostArticleRequest) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

func (x *PostArticleRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *PostArticleRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PutArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID     int64  `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`         // 文章id
	Title      string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`            // 标题
	Content    string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`        // 内容
	AuthorUID  int64  `protobuf:"varint,4,opt,name=AuthorUID,proto3" json:"AuthorUID,omitempty"`   // 作者id
	Summary    string `protobuf:"bytes,5,opt,name=Summary,proto3" json:"Summary,omitempty"`        // 摘要
	CategoryID int64  `protobuf:"varint,6,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"` // 分类id
	Status     int64  `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`         // 文章状态 1 = 正常
}

func (x *PutArticleRequest) Reset() {
	*x = PutArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArticleRequest) ProtoMessage() {}

func (x *PutArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArticleRequest.ProtoReflect.Descriptor instead.
func (*PutArticleRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{9}
}

func (x *PutArticleRequest) GetPostID() int64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *PutArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PutArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PutArticleRequest) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

func (x *PutArticleRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *PutArticleRequest) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *PutArticleRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetArticleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitAriticleID int64  `protobuf:"varint,1,opt,name=LimitAriticleID,proto3" json:"LimitAriticleID,omitempty"` // 列表最后一个文章id
	Page            int64  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`                       // 页码
	Size            int64  `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`                       // 数量
	CategoryID      int64  `protobuf:"varint,4,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`           // 分类id
	OrderType       string `protobuf:"bytes,5,opt,name=OrderType,proto3" json:"OrderType,omitempty"`              // 排序类型
	UID             int64  `protobuf:"varint,6,opt,name=UID,proto3" json:"UID,omitempty"`                         // 作者id
	RequestUID      int64  `protobuf:"varint,7,opt,name=RequestUID,proto3" json:"RequestUID,omitempty"`           // 请求的UID
}

func (x *GetArticleListRequest) Reset() {
	*x = GetArticleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListRequest) ProtoMessage() {}

func (x *GetArticleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListRequest.ProtoReflect.Descriptor instead.
func (*GetArticleListRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{10}
}

func (x *GetArticleListRequest) GetLimitAriticleID() int64 {
	if x != nil {
		return x.LimitAriticleID
	}
	return 0
}

func (x *GetArticleListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetArticleListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetArticleListRequest) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *GetArticleListRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *GetArticleListRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *GetArticleListRequest) GetRequestUID() int64 {
	if x != nil {
		return x.RequestUID
	}
	return 0
}

type PostCommentToArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID          int64  `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`                   // 文章id
	Comment         string `protobuf:"bytes,2,opt,name=Comment,proto3" json:"Comment,omitempty"`                  // 评论内容
	ReplyCommentID  int64  `protobuf:"varint,3,opt,name=ReplyCommentID,proto3" json:"ReplyCommentID,omitempty"`   // 回复评论ID
	CommentUID      int64  `protobuf:"varint,4,opt,name=CommentUID,proto3" json:"CommentUID,omitempty"`           // 发表评论人的id
	ReplyCommentUID int64  `protobuf:"varint,5,opt,name=ReplyCommentUID,proto3" json:"ReplyCommentUID,omitempty"` // 回复评论用户ID
	AuthorUID       int64  `protobuf:"varint,6,opt,name=AuthorUID,proto3" json:"AuthorUID,omitempty"`             // 文章作者ID
}

func (x *PostCommentToArticleRequest) Reset() {
	*x = PostCommentToArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCommentToArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentToArticleRequest) ProtoMessage() {}

func (x *PostCommentToArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentToArticleRequest.ProtoReflect.Descriptor instead.
func (*PostCommentToArticleRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{11}
}

func (x *PostCommentToArticleRequest) GetPostID() int64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *PostCommentToArticleRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PostCommentToArticleRequest) GetReplyCommentID() int64 {
	if x != nil {
		return x.ReplyCommentID
	}
	return 0
}

func (x *PostCommentToArticleRequest) GetCommentUID() int64 {
	if x != nil {
		return x.CommentUID
	}
	return 0
}

func (x *PostCommentToArticleRequest) GetReplyCommentUID() int64 {
	if x != nil {
		return x.ReplyCommentUID
	}
	return 0
}

func (x *PostCommentToArticleRequest) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

type DelCommentToArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID    int64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`       // 文章id
	CommentID int64 `protobuf:"varint,2,opt,name=CommentID,proto3" json:"CommentID,omitempty"` // 评论ID
	UID       int64 `protobuf:"varint,3,opt,name=UID,proto3" json:"UID,omitempty"`             // 评论所属人ID 管理员可以不填
	AuthorUID int64 `protobuf:"varint,4,opt,name=AuthorUID,proto3" json:"AuthorUID,omitempty"` // 作者uid 可以不填
}

func (x *DelCommentToArticleRequest) Reset() {
	*x = DelCommentToArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCommentToArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCommentToArticleRequest) ProtoMessage() {}

func (x *DelCommentToArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCommentToArticleRequest.ProtoReflect.Descriptor instead.
func (*DelCommentToArticleRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{12}
}

func (x *DelCommentToArticleRequest) GetPostID() int64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *DelCommentToArticleRequest) GetCommentID() int64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *DelCommentToArticleRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *DelCommentToArticleRequest) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

type GetCommentListOfArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page            int64  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`                       // 页码
	Size            int64  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`                       // 数量
	PostID          int64  `protobuf:"varint,3,opt,name=PostID,proto3" json:"PostID,omitempty"`                   // 文章id
	AuthorUID       int64  `protobuf:"varint,4,opt,name=AuthorUID,proto3" json:"AuthorUID,omitempty"`             // 文章作者ID
	ReplyCommentUID int64  `protobuf:"varint,5,opt,name=ReplyCommentUID,proto3" json:"ReplyCommentUID,omitempty"` // 回复评论用户ID
	CommentUID      int64  `protobuf:"varint,6,opt,name=CommentUID,proto3" json:"CommentUID,omitempty"`           // 发表评论人的id
	OrderType       string `protobuf:"bytes,7,opt,name=OrderType,proto3" json:"OrderType,omitempty"`              // 排序类型
}

func (x *GetCommentListOfArticleRequest) Reset() {
	*x = GetCommentListOfArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListOfArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListOfArticleRequest) ProtoMessage() {}

func (x *GetCommentListOfArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListOfArticleRequest.ProtoReflect.Descriptor instead.
func (*GetCommentListOfArticleRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{13}
}

func (x *GetCommentListOfArticleRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentListOfArticleRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetCommentListOfArticleRequest) GetPostID() int64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *GetCommentListOfArticleRequest) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

func (x *GetCommentListOfArticleRequest) GetReplyCommentUID() int64 {
	if x != nil {
		return x.ReplyCommentUID
	}
	return 0
}

func (x *GetCommentListOfArticleRequest) GetCommentUID() int64 {
	if x != nil {
		return x.CommentUID
	}
	return 0
}

func (x *GetCommentListOfArticleRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

type DelCommentListOfArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID     int64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`         // 文章id
	CommentUID int64 `protobuf:"varint,2,opt,name=CommentUID,proto3" json:"CommentUID,omitempty"` // 评论人的id
	AuthorUID  int64 `protobuf:"varint,3,opt,name=AuthorUID,proto3" json:"AuthorUID,omitempty"`   // 作者uid
}

func (x *DelCommentListOfArticleRequest) Reset() {
	*x = DelCommentListOfArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCommentListOfArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCommentListOfArticleRequest) ProtoMessage() {}

func (x *DelCommentListOfArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCommentListOfArticleRequest.ProtoReflect.Descriptor instead.
func (*DelCommentListOfArticleRequest) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{14}
}

func (x *DelCommentListOfArticleRequest) GetPostID() int64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *DelCommentListOfArticleRequest) GetCommentUID() int64 {
	if x != nil {
		return x.CommentUID
	}
	return 0
}

func (x *DelCommentListOfArticleRequest) GetAuthorUID() int64 {
	if x != nil {
		return x.AuthorUID
	}
	return 0
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorInfo WritingErrors `protobuf:"varint,1,opt,name=ErrorInfo,proto3,enum=writing.WritingErrors" json:"ErrorInfo,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{15}
}

func (x *ErrorResponse) GetErrorInfo() WritingErrors {
	if x != nil {
		return x.ErrorInfo
	}
	return WritingErrors_None
}

type ArticleListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*ArticleInfo `protobuf:"bytes,1,rep,name=Articles,proto3" json:"Articles,omitempty"` // 文章列表
}

func (x *ArticleListResponse) Reset() {
	*x = ArticleListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleListResponse) ProtoMessage() {}

func (x *ArticleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleListResponse.ProtoReflect.Descriptor instead.
func (*ArticleListResponse) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{16}
}

func (x *ArticleListResponse) GetArticles() []*ArticleInfo {
	if x != nil {
		return x.Articles
	}
	return nil
}

type CategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Category `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *CategoriesResponse) Reset() {
	*x = CategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoriesResponse) ProtoMessage() {}

func (x *CategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoriesResponse.ProtoReflect.Descriptor instead.
func (*CategoriesResponse) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{17}
}

func (x *CategoriesResponse) GetList() []*Category {
	if x != nil {
		return x.List
	}
	return nil
}

type CommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentInfo `protobuf:"bytes,1,rep,name=Comments,proto3" json:"Comments,omitempty"`
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_writing_writing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_writing_writing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_writing_writing_proto_rawDescGZIP(), []int{18}
}

func (x *CommentListResponse) GetComments() []*CommentInfo {
	if x != nil {
		return x.Comments
	}
	return nil
}

var File_writing_writing_proto protoreflect.FileDescriptor

var file_writing_writing_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xd5, 0x02, 0x0a, 0x0b, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x09, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0a,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x27, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x44, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0x52, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x3a, 0x0a, 0x08, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x4e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x43, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x45, 0x4e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x45, 0x4e, 0x22, 0xd6, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x40, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x49, 0x44, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcb, 0x01,
	0x0a, 0x11, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x72, 0x69, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x49, 0x44, 0x22, 0xdf, 0x01, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49,
	0x44, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x22, 0xe6,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x49, 0x44, 0x22,
	0x45, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x09, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x08, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22,
	0x3b, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0xed, 0x01, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0xc1, 0x8d, 0xb7, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x50, 0x6f, 0x73,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc2,
	0x8d, 0xb7, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc3, 0x8d, 0xb7, 0x01, 0x12, 0x17,
	0x0a, 0x10, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0xc4, 0x8d, 0xb7, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x10, 0xc6, 0x8d, 0xb7, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc7, 0x8d, 0xb7, 0x01, 0x12,
	0x17, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0xc8, 0x8d, 0xb7, 0x01, 0x12, 0x1b, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x10, 0xc9, 0x8d, 0xb7, 0x01, 0x32, 0xc8, 0x06, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x56, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1b,
	0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x72,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x1a, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x0e, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1b, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x50, 0x75, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x1a, 0x16, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x24, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x72, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x27, 0x2e,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x27, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_writing_writing_proto_rawDescOnce sync.Once
	file_writing_writing_proto_rawDescData = file_writing_writing_proto_rawDesc
)

func file_writing_writing_proto_rawDescGZIP() []byte {
	file_writing_writing_proto_rawDescOnce.Do(func() {
		file_writing_writing_proto_rawDescData = protoimpl.X.CompressGZIP(file_writing_writing_proto_rawDescData)
	})
	return file_writing_writing_proto_rawDescData
}

var file_writing_writing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_writing_writing_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_writing_writing_proto_goTypes = []interface{}{
	(WritingErrors)(0),                     // 0: writing.WritingErrors
	(*Empty)(nil),                          // 1: writing.Empty
	(*ArticleInfo)(nil),                    // 2: writing.ArticleInfo
	(*Tag)(nil),                            // 3: writing.Tag
	(*CountInfo)(nil),                      // 4: writing.CountInfo
	(*AuthorInfo)(nil),                     // 5: writing.AuthorInfo
	(*Category)(nil),                       // 6: writing.Category
	(*CommentInfo)(nil),                    // 7: writing.CommentInfo
	(*GetArticleByIdRequest)(nil),          // 8: writing.GetArticleByIdRequest
	(*PostArticleRequest)(nil),             // 9: writing.PostArticleRequest
	(*PutArticleRequest)(nil),              // 10: writing.PutArticleRequest
	(*GetArticleListRequest)(nil),          // 11: writing.GetArticleListRequest
	(*PostCommentToArticleRequest)(nil),    // 12: writing.PostCommentToArticleRequest
	(*DelCommentToArticleRequest)(nil),     // 13: writing.DelCommentToArticleRequest
	(*GetCommentListOfArticleRequest)(nil), // 14: writing.GetCommentListOfArticleRequest
	(*DelCommentListOfArticleRequest)(nil), // 15: writing.DelCommentListOfArticleRequest
	(*ErrorResponse)(nil),                  // 16: writing.ErrorResponse
	(*ArticleListResponse)(nil),            // 17: writing.ArticleListResponse
	(*CategoriesResponse)(nil),             // 18: writing.CategoriesResponse
	(*CommentListResponse)(nil),            // 19: writing.CommentListResponse
}
var file_writing_writing_proto_depIdxs = []int32{
	3,  // 0: writing.ArticleInfo.Tags:type_name -> writing.Tag
	6,  // 1: writing.ArticleInfo.Category:type_name -> writing.Category
	4,  // 2: writing.ArticleInfo.CountInfo:type_name -> writing.CountInfo
	5,  // 3: writing.ArticleInfo.AuthorInfo:type_name -> writing.AuthorInfo
	5,  // 4: writing.CommentInfo.CommentUserInfo:type_name -> writing.AuthorInfo
	7,  // 5: writing.CommentInfo.ReplyCommentInfo:type_name -> writing.CommentInfo
	0,  // 6: writing.ErrorResponse.ErrorInfo:type_name -> writing.WritingErrors
	2,  // 7: writing.ArticleListResponse.Articles:type_name -> writing.ArticleInfo
	6,  // 8: writing.CategoriesResponse.List:type_name -> writing.Category
	7,  // 9: writing.CommentListResponse.Comments:type_name -> writing.CommentInfo
	8,  // 10: writing.writingSV.GetArticleById:input_type -> writing.GetArticleByIdRequest
	11, // 11: writing.writingSV.GetArticleList:input_type -> writing.GetArticleListRequest
	9,  // 12: writing.writingSV.PostArticle:input_type -> writing.PostArticleRequest
	10, // 13: writing.writingSV.PutArticle:input_type -> writing.PutArticleRequest
	6,  // 14: writing.writingSV.PostCategory:input_type -> writing.Category
	1,  // 15: writing.writingSV.GetCategories:input_type -> writing.Empty
	6,  // 16: writing.writingSV.PutCategory:input_type -> writing.Category
	12, // 17: writing.writingSV.PostCommentToArticle:input_type -> writing.PostCommentToArticleRequest
	13, // 18: writing.writingSV.DelCommentToArticle:input_type -> writing.DelCommentToArticleRequest
	14, // 19: writing.writingSV.GetCommentListOfArticle:input_type -> writing.GetCommentListOfArticleRequest
	15, // 20: writing.writingSV.DelCommentListOfArticle:input_type -> writing.DelCommentListOfArticleRequest
	2,  // 21: writing.writingSV.GetArticleById:output_type -> writing.ArticleInfo
	17, // 22: writing.writingSV.GetArticleList:output_type -> writing.ArticleListResponse
	16, // 23: writing.writingSV.PostArticle:output_type -> writing.ErrorResponse
	16, // 24: writing.writingSV.PutArticle:output_type -> writing.ErrorResponse
	16, // 25: writing.writingSV.PostCategory:output_type -> writing.ErrorResponse
	18, // 26: writing.writingSV.GetCategories:output_type -> writing.CategoriesResponse
	16, // 27: writing.writingSV.PutCategory:output_type -> writing.ErrorResponse
	16, // 28: writing.writingSV.PostCommentToArticle:output_type -> writing.ErrorResponse
	16, // 29: writing.writingSV.DelCommentToArticle:output_type -> writing.ErrorResponse
	19, // 30: writing.writingSV.GetCommentListOfArticle:output_type -> writing.CommentListResponse
	16, // 31: writing.writingSV.DelCommentListOfArticle:output_type -> writing.ErrorResponse
	21, // [21:32] is the sub-list for method output_type
	10, // [10:21] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_writing_writing_proto_init() }
func file_writing_writing_proto_init() {
	if File_writing_writing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_writing_writing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCommentToArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCommentToArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListOfArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCommentListOfArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_writing_writing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_writing_writing_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_writing_writing_proto_goTypes,
		DependencyIndexes: file_writing_writing_proto_depIdxs,
		EnumInfos:         file_writing_writing_proto_enumTypes,
		MessageInfos:      file_writing_writing_proto_msgTypes,
	}.Build()
	File_writing_writing_proto = out.File
	file_writing_writing_proto_rawDesc = nil
	file_writing_writing_proto_goTypes = nil
	file_writing_writing_proto_depIdxs = nil
}
