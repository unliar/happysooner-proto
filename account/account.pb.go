// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: account/account.proto

package account

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Role int32

const (
	Role_DefaultRole Role = 0 // 默认
	Role_Admin       Role = 1 // 超级管理员
	Role_Author      Role = 2 // 创作者 可以发文章
	Role_Viewer      Role = 3 // 观察者 绑定邮箱之后可获得
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "DefaultRole",
		1: "Admin",
		2: "Author",
		3: "Viewer",
	}
	Role_value = map[string]int32{
		"DefaultRole": 0,
		"Admin":       1,
		"Author":      2,
		"Viewer":      3,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_account_account_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_account_account_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{0}
}

// 错误码定义 累计7位 账户服务使用 100 [第一位1表示账户模块，第二位表示子模块(表)] ，后四位自由发挥qaq
// 100
type AccountErrors int32

const (
	AccountErrors_None                           AccountErrors = 0       // 默认值
	AccountErrors_UserNotFound                   AccountErrors = 1000001 // 用户不存在
	AccountErrors_UserCreateFailed               AccountErrors = 1000002 // 创建用户失败
	AccountErrors_UserUpdateFailed               AccountErrors = 1000003 // 更新用户失败
	AccountErrors_UserNicknameExist              AccountErrors = 1000004 // 用户昵称存在
	AccountErrors_UserLoginNameExist             AccountErrors = 1000005 // 用户登录名称存在
	AccountErrors_UserPhoneExist                 AccountErrors = 1000006 // 用户手机号存在
	AccountErrors_UserEmailExist                 AccountErrors = 1000007 // 用户邮箱号存在
	AccountErrors_UserPasswordCheckFailed        AccountErrors = 1000008 // 用户密码不匹配
	AccountErrors_UserBindUserContactEmailFailed AccountErrors = 1000009 // 用户绑定邮箱失败
	AccountErrors_UserBindUserContactPhoneFailed AccountErrors = 1000010 // 用户绑定绑定手机失败
	AccountErrors_UserVapchaVerifyFailed         AccountErrors = 1000011 // 用户校验验证码失败
)

// Enum value maps for AccountErrors.
var (
	AccountErrors_name = map[int32]string{
		0:       "None",
		1000001: "UserNotFound",
		1000002: "UserCreateFailed",
		1000003: "UserUpdateFailed",
		1000004: "UserNicknameExist",
		1000005: "UserLoginNameExist",
		1000006: "UserPhoneExist",
		1000007: "UserEmailExist",
		1000008: "UserPasswordCheckFailed",
		1000009: "UserBindUserContactEmailFailed",
		1000010: "UserBindUserContactPhoneFailed",
		1000011: "UserVapchaVerifyFailed",
	}
	AccountErrors_value = map[string]int32{
		"None":                           0,
		"UserNotFound":                   1000001,
		"UserCreateFailed":               1000002,
		"UserUpdateFailed":               1000003,
		"UserNicknameExist":              1000004,
		"UserLoginNameExist":             1000005,
		"UserPhoneExist":                 1000006,
		"UserEmailExist":                 1000007,
		"UserPasswordCheckFailed":        1000008,
		"UserBindUserContactEmailFailed": 1000009,
		"UserBindUserContactPhoneFailed": 1000010,
		"UserVapchaVerifyFailed":         1000011,
	}
)

func (x AccountErrors) Enum() *AccountErrors {
	p := new(AccountErrors)
	*p = x
	return p
}

func (x AccountErrors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountErrors) Descriptor() protoreflect.EnumDescriptor {
	return file_account_account_proto_enumTypes[1].Descriptor()
}

func (AccountErrors) Type() protoreflect.EnumType {
	return &file_account_account_proto_enumTypes[1]
}

func (x AccountErrors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountErrors.Descriptor instead.
func (AccountErrors) EnumDescriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{1}
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64             `protobuf:"varint,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`                        // id
	LoginName  string            `protobuf:"bytes,2,opt,name=LoginName,json=loginName,proto3" json:"LoginName,omitempty"`    // 登录
	Nickname   string            `protobuf:"bytes,3,opt,name=Nickname,json=nickname,proto3" json:"Nickname,omitempty"`       // 昵称
	Age        int64             `protobuf:"varint,4,opt,name=Age,json=age,proto3" json:"Age,omitempty"`                     // 年龄
	Gender     int64             `protobuf:"varint,5,opt,name=Gender,json=gender,proto3" json:"Gender,omitempty"`            // 性别
	Avatar     string            `protobuf:"bytes,6,opt,name=Avatar,json=avatar,proto3" json:"Avatar,omitempty"`             // 头像
	Location   string            `protobuf:"bytes,7,opt,name=Location,json=location,proto3" json:"Location,omitempty"`       // 位置
	Profession string            `protobuf:"bytes,8,opt,name=Profession,json=profession,proto3" json:"Profession,omitempty"` // 职业
	Status     int64             `protobuf:"varint,9,opt,name=Status,json=status,proto3" json:"Status,omitempty"`            // 状态
	Brief      string            `protobuf:"bytes,12,opt,name=Brief,json=brief,proto3" json:"Brief,omitempty"`               // 简介
	Email      string            `protobuf:"bytes,13,opt,name=Email,json=email,proto3" json:"Email,omitempty"`               // 邮箱
	Phone      string            `protobuf:"bytes,14,opt,name=Phone,json=phone,proto3" json:"Phone,omitempty"`               // 手机号
	PhoneCode  string            `protobuf:"bytes,15,opt,name=PhoneCode,json=phoneCode,proto3" json:"PhoneCode,omitempty"`   // 手机区号
	WeChatId   string            `protobuf:"bytes,16,opt,name=WeChatId,json=weChatId,proto3" json:"WeChatId,omitempty"`      // 微信id
	QQId       string            `protobuf:"bytes,17,opt,name=QQId,json=qQId,proto3" json:"QQId,omitempty"`                  // qqid
	Password   string            `protobuf:"bytes,18,opt,name=Password,json=password,proto3" json:"Password,omitempty"`      // 用户加密后的密码
	Roles      []*NewRoleRequest `protobuf:"bytes,19,rep,name=Roles,json=roles,proto3" json:"Roles,omitempty"`               // 用户角色信息
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserInfo) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UserInfo) GetProfession() string {
	if x != nil {
		return x.Profession
	}
	return ""
}

func (x *UserInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserInfo) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *UserInfo) GetWeChatId() string {
	if x != nil {
		return x.WeChatId
	}
	return ""
}

func (x *UserInfo) GetQQId() string {
	if x != nil {
		return x.QQId
	}
	return ""
}

func (x *UserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserInfo) GetRoles() []*NewRoleRequest {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserInfo `protobuf:"bytes,1,rep,name=List,json=list,proto3" json:"List,omitempty"` // 用户信息列表
}

func (x *UserInfoList) Reset() {
	*x = UserInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoList) ProtoMessage() {}

func (x *UserInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoList.ProtoReflect.Descriptor instead.
func (*UserInfoList) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfoList) GetList() []*UserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type PutUserBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`                        // id
	LoginName  string `protobuf:"bytes,2,opt,name=LoginName,json=loginName,proto3" json:"LoginName,omitempty"`    // 登录
	Nickname   string `protobuf:"bytes,3,opt,name=Nickname,json=nickname,proto3" json:"Nickname,omitempty"`       // 昵称
	Age        int64  `protobuf:"varint,4,opt,name=Age,json=age,proto3" json:"Age,omitempty"`                     // 年龄
	Gender     int64  `protobuf:"varint,5,opt,name=Gender,json=gender,proto3" json:"Gender,omitempty"`            // 性别
	Avatar     string `protobuf:"bytes,6,opt,name=Avatar,json=avatar,proto3" json:"Avatar,omitempty"`             // 头像
	Location   string `protobuf:"bytes,7,opt,name=Location,json=location,proto3" json:"Location,omitempty"`       // 位置
	Profession string `protobuf:"bytes,8,opt,name=Profession,json=profession,proto3" json:"Profession,omitempty"` // 职业
	Brief      string `protobuf:"bytes,9,opt,name=Brief,json=brief,proto3" json:"Brief,omitempty"`                // 简介
}

func (x *PutUserBaseRequest) Reset() {
	*x = PutUserBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserBaseRequest) ProtoMessage() {}

func (x *PutUserBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserBaseRequest.ProtoReflect.Descriptor instead.
func (*PutUserBaseRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{2}
}

func (x *PutUserBaseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PutUserBaseRequest) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *PutUserBaseRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PutUserBaseRequest) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *PutUserBaseRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *PutUserBaseRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PutUserBaseRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PutUserBaseRequest) GetProfession() string {
	if x != nil {
		return x.Profession
	}
	return ""
}

func (x *PutUserBaseRequest) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

type UserInfoWithToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=UserInfo,json=userInfo,proto3" json:"UserInfo,omitempty"`
	Token    string    `protobuf:"bytes,2,opt,name=Token,json=token,proto3" json:"Token,omitempty"`
}

func (x *UserInfoWithToken) Reset() {
	*x = UserInfoWithToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoWithToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoWithToken) ProtoMessage() {}

func (x *UserInfoWithToken) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoWithToken.ProtoReflect.Descriptor instead.
func (*UserInfoWithToken) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{3}
}

func (x *UserInfoWithToken) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserInfoWithToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// id查询用户信息
type UIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID int64 `protobuf:"varint,1,opt,name=UID,json=uID,proto3" json:"UID,omitempty"` // 用户id
}

func (x *UIDInput) Reset() {
	*x = UIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDInput) ProtoMessage() {}

func (x *UIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDInput.ProtoReflect.Descriptor instead.
func (*UIDInput) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{4}
}

func (x *UIDInput) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type UIDSInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UIDS []int64 `protobuf:"varint,1,rep,packed,name=UIDS,json=uIDS,proto3" json:"UIDS,omitempty"` // 多个用户UID
}

func (x *UIDSInput) Reset() {
	*x = UIDSInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDSInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDSInput) ProtoMessage() {}

func (x *UIDSInput) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDSInput.ProtoReflect.Descriptor instead.
func (*UIDSInput) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{5}
}

func (x *UIDSInput) GetUIDS() []int64 {
	if x != nil {
		return x.UIDS
	}
	return nil
}

// 第三方登录请求
type OauthLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=Type,json=type,proto3" json:"Type,omitempty"` // 类型
	Code string `protobuf:"bytes,2,opt,name=Code,json=code,proto3" json:"Code,omitempty"` // 授权code
}

func (x *OauthLoginRequest) Reset() {
	*x = OauthLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthLoginRequest) ProtoMessage() {}

func (x *OauthLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthLoginRequest.ProtoReflect.Descriptor instead.
func (*OauthLoginRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{6}
}

func (x *OauthLoginRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OauthLoginRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorInfo AccountErrors `protobuf:"varint,1,opt,name=ErrorInfo,json=errorInfo,proto3,enum=account.AccountErrors" json:"ErrorInfo,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorResponse) GetErrorInfo() AccountErrors {
	if x != nil {
		return x.ErrorInfo
	}
	return AccountErrors_None
}

// 创建用户
type CreateUserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=Type,json=type,proto3" json:"Type,omitempty"`                         // 类型 用户名、手机号、邮箱
	Value        string `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`                      // 值
	Password     string `protobuf:"bytes,3,opt,name=Password,json=password,proto3" json:"Password,omitempty"`             // 密码
	Nickname     string `protobuf:"bytes,7,opt,name=Nickname,json=nickname,proto3" json:"Nickname,omitempty"`             // 昵称
	Extension    string `protobuf:"bytes,4,opt,name=Extension,json=extension,proto3" json:"Extension,omitempty"`          // 扩展字段 比如手机的地区码
	IP           string `protobuf:"bytes,5,opt,name=IP,json=iP,proto3" json:"IP,omitempty"`                               // ip字段
	RegisterFrom string `protobuf:"bytes,6,opt,name=RegisterFrom,json=registerFrom,proto3" json:"RegisterFrom,omitempty"` // 注册渠道
}

func (x *CreateUserInput) Reset() {
	*x = CreateUserInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserInput) ProtoMessage() {}

func (x *CreateUserInput) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserInput.ProtoReflect.Descriptor instead.
func (*CreateUserInput) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateUserInput) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateUserInput) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserInput) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateUserInput) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *CreateUserInput) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *CreateUserInput) GetRegisterFrom() string {
	if x != nil {
		return x.RegisterFrom
	}
	return ""
}

// 用户登录
type UserLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=Type,json=type,proto3" json:"Type,omitempty"`              // 登录类型
	Value    string `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`           // 登录类型值
	Password string `protobuf:"bytes,3,opt,name=Password,json=password,proto3" json:"Password,omitempty"`  // 登录密码
	Validate bool   `protobuf:"varint,4,opt,name=Validate,json=validate,proto3" json:"Validate,omitempty"` // 密码校验
}

func (x *UserLoginRequest) Reset() {
	*x = UserLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginRequest) ProtoMessage() {}

func (x *UserLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginRequest.ProtoReflect.Descriptor instead.
func (*UserLoginRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{9}
}

func (x *UserLoginRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserLoginRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserLoginRequest) GetValidate() bool {
	if x != nil {
		return x.Validate
	}
	return false
}

type UserToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,json=token,proto3" json:"Token,omitempty"` // 用户token
}

func (x *UserToken) Reset() {
	*x = UserToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserToken) ProtoMessage() {}

func (x *UserToken) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserToken.ProtoReflect.Descriptor instead.
func (*UserToken) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{10}
}

func (x *UserToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 更新用户密码
type PutPassowrdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID           int64  `protobuf:"varint,1,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`                              // 用户id
	Password      string `protobuf:"bytes,2,opt,name=Password,json=password,proto3" json:"Password,omitempty"`                // 用户的老密码
	FreshPassword string `protobuf:"bytes,3,opt,name=FreshPassword,json=freshPassword,proto3" json:"FreshPassword,omitempty"` // 用户的新密码
}

func (x *PutPassowrdRequest) Reset() {
	*x = PutPassowrdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutPassowrdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutPassowrdRequest) ProtoMessage() {}

func (x *PutPassowrdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutPassowrdRequest.ProtoReflect.Descriptor instead.
func (*PutPassowrdRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{11}
}

func (x *PutPassowrdRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *PutPassowrdRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PutPassowrdRequest) GetFreshPassword() string {
	if x != nil {
		return x.FreshPassword
	}
	return ""
}

// 获取用户密码是否是随机生成的
type PasswordRandomStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Random int64 `protobuf:"varint,1,opt,name=Random,json=random,proto3" json:"Random,omitempty"` // 用户的密码是否是随机生成的 如果是1 就是随机的 2就不是随机
}

func (x *PasswordRandomStatus) Reset() {
	*x = PasswordRandomStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordRandomStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordRandomStatus) ProtoMessage() {}

func (x *PasswordRandomStatus) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordRandomStatus.ProtoReflect.Descriptor instead.
func (*PasswordRandomStatus) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{12}
}

func (x *PasswordRandomStatus) GetRandom() int64 {
	if x != nil {
		return x.Random
	}
	return 0
}

type PutUserContactEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=Email,json=email,proto3" json:"Email,omitempty"` // 邮箱
	UID   int64  `protobuf:"varint,2,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`      // 用户id
}

func (x *PutUserContactEmailRequest) Reset() {
	*x = PutUserContactEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserContactEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserContactEmailRequest) ProtoMessage() {}

func (x *PutUserContactEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserContactEmailRequest.ProtoReflect.Descriptor instead.
func (*PutUserContactEmailRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{13}
}

func (x *PutUserContactEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PutUserContactEmailRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type PutUserContactPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=Phone,json=phone,proto3" json:"Phone,omitempty"`             // 手机
	PhoneCode string `protobuf:"bytes,2,opt,name=PhoneCode,json=phoneCode,proto3" json:"PhoneCode,omitempty"` // 区号
	UID       int64  `protobuf:"varint,3,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`                  // 用户id
}

func (x *PutUserContactPhoneRequest) Reset() {
	*x = PutUserContactPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserContactPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserContactPhoneRequest) ProtoMessage() {}

func (x *PutUserContactPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserContactPhoneRequest.ProtoReflect.Descriptor instead.
func (*PutUserContactPhoneRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{14}
}

func (x *PutUserContactPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PutUserContactPhoneRequest) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *PutUserContactPhoneRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type UserContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=Phone,json=phone,proto3" json:"Phone,omitempty"`             // 手机
	PhoneCode string `protobuf:"bytes,2,opt,name=PhoneCode,json=phoneCode,proto3" json:"PhoneCode,omitempty"` // 区号
	Email     string `protobuf:"bytes,3,opt,name=Email,json=email,proto3" json:"Email,omitempty"`             // 邮箱
	WeChatId  string `protobuf:"bytes,4,opt,name=WeChatId,json=weChatId,proto3" json:"WeChatId,omitempty"`    // 微信id
	QQId      string `protobuf:"bytes,5,opt,name=QQId,json=qQId,proto3" json:"QQId,omitempty"`                // qq
}

func (x *UserContact) Reset() {
	*x = UserContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserContact) ProtoMessage() {}

func (x *UserContact) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserContact.ProtoReflect.Descriptor instead.
func (*UserContact) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{15}
}

func (x *UserContact) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserContact) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *UserContact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserContact) GetWeChatId() string {
	if x != nil {
		return x.WeChatId
	}
	return ""
}

func (x *UserContact) GetQQId() string {
	if x != nil {
		return x.QQId
	}
	return ""
}

type SetUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role Role  `protobuf:"varint,1,opt,name=Role,json=role,proto3,enum=account.Role" json:"Role,omitempty"` // 角色
	UID  int64 `protobuf:"varint,2,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`                      // 用户id
}

func (x *SetUserRoleRequest) Reset() {
	*x = SetUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserRoleRequest) ProtoMessage() {}

func (x *SetUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserRoleRequest.ProtoReflect.Descriptor instead.
func (*SetUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{16}
}

func (x *SetUserRoleRequest) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_DefaultRole
}

func (x *SetUserRoleRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type VaptchaVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,json=token,proto3" json:"Token,omitempty"` // 前端验证传来的逻辑
	IP    string `protobuf:"bytes,2,opt,name=IP,json=iP,proto3" json:"IP,omitempty"`          // 请求的IP
}

func (x *VaptchaVerifyRequest) Reset() {
	*x = VaptchaVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaptchaVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaptchaVerifyRequest) ProtoMessage() {}

func (x *VaptchaVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaptchaVerifyRequest.ProtoReflect.Descriptor instead.
func (*VaptchaVerifyRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{17}
}

func (x *VaptchaVerifyRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VaptchaVerifyRequest) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

type VaptchaVerifyOfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfflineAction string `protobuf:"bytes,1,opt,name=OfflineAction,json=offlineAction,proto3" json:"OfflineAction,omitempty"` // 值为get获取验证图片，值为verify进行人机验证
	Callback      string `protobuf:"bytes,2,opt,name=Callback,json=callback,proto3" json:"Callback,omitempty"`                // jsonp回调函数名
	V             string `protobuf:"bytes,3,opt,name=V,json=v,proto3" json:"V,omitempty"`                                     // 轨迹图
	Knock         string `protobuf:"bytes,4,opt,name=Knock,json=knock,proto3" json:"Knock,omitempty"`                         // 流水号
}

func (x *VaptchaVerifyOfflineRequest) Reset() {
	*x = VaptchaVerifyOfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaptchaVerifyOfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaptchaVerifyOfflineRequest) ProtoMessage() {}

func (x *VaptchaVerifyOfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaptchaVerifyOfflineRequest.ProtoReflect.Descriptor instead.
func (*VaptchaVerifyOfflineRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{18}
}

func (x *VaptchaVerifyOfflineRequest) GetOfflineAction() string {
	if x != nil {
		return x.OfflineAction
	}
	return ""
}

func (x *VaptchaVerifyOfflineRequest) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *VaptchaVerifyOfflineRequest) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *VaptchaVerifyOfflineRequest) GetKnock() string {
	if x != nil {
		return x.Knock
	}
	return ""
}

type NewRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=Title,json=title,proto3" json:"Title,omitempty"`                   // 角色名称
	Description string `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"` // 角色描述
	RID         int64  `protobuf:"varint,3,opt,name=RID,json=rID,proto3" json:"RID,omitempty"`                        // roleID 新建角色不需要
}

func (x *NewRoleRequest) Reset() {
	*x = NewRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoleRequest) ProtoMessage() {}

func (x *NewRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoleRequest.ProtoReflect.Descriptor instead.
func (*NewRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{19}
}

func (x *NewRoleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewRoleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewRoleRequest) GetRID() int64 {
	if x != nil {
		return x.RID
	}
	return 0
}

type NewRoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*NewRoleRequest `protobuf:"bytes,1,rep,name=List,json=list,proto3" json:"List,omitempty"` // 列表
}

func (x *NewRoleList) Reset() {
	*x = NewRoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRoleList) ProtoMessage() {}

func (x *NewRoleList) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRoleList.ProtoReflect.Descriptor instead.
func (*NewRoleList) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{20}
}

func (x *NewRoleList) GetList() []*NewRoleRequest {
	if x != nil {
		return x.List
	}
	return nil
}

type PermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CN          string `protobuf:"bytes,1,opt,name=CN,json=cN,proto3" json:"CN,omitempty"`                            // 中文权限名称
	EU          string `protobuf:"bytes,2,opt,name=EU,json=eU,proto3" json:"EU,omitempty"`                            // 英文名
	Description string `protobuf:"bytes,3,opt,name=Description,json=description,proto3" json:"Description,omitempty"` // 描述信息
	PID         int64  `protobuf:"varint,4,opt,name=PID,json=pID,proto3" json:"PID,omitempty"`                        // 权限ID
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{21}
}

func (x *PermissionInfo) GetCN() string {
	if x != nil {
		return x.CN
	}
	return ""
}

func (x *PermissionInfo) GetEU() string {
	if x != nil {
		return x.EU
	}
	return ""
}

func (x *PermissionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionInfo) GetPID() int64 {
	if x != nil {
		return x.PID
	}
	return 0
}

type PermissionInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PermissionInfo `protobuf:"bytes,1,rep,name=List,json=list,proto3" json:"List,omitempty"` // 权限列表
}

func (x *PermissionInfoList) Reset() {
	*x = PermissionInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfoList) ProtoMessage() {}

func (x *PermissionInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfoList.ProtoReflect.Descriptor instead.
func (*PermissionInfoList) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{22}
}

func (x *PermissionInfoList) GetList() []*PermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetWechatAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,1,opt,name=AppID,json=appID,proto3" json:"AppID,omitempty"`    // 应用ID
	Secret string `protobuf:"bytes,2,opt,name=Secret,json=secret,proto3" json:"Secret,omitempty"` // 应用密钥
}

func (x *GetWechatAccessTokenRequest) Reset() {
	*x = GetWechatAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWechatAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWechatAccessTokenRequest) ProtoMessage() {}

func (x *GetWechatAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWechatAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*GetWechatAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{23}
}

func (x *GetWechatAccessTokenRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetWechatAccessTokenRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=Content,json=content,proto3" json:"Content,omitempty"` // 是
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{24}
}

func (x *CommonResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetWechatUserInfoByCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,json=code,proto3" json:"Code,omitempty"`
}

func (x *GetWechatUserInfoByCodeRequest) Reset() {
	*x = GetWechatUserInfoByCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWechatUserInfoByCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWechatUserInfoByCodeRequest) ProtoMessage() {}

func (x *GetWechatUserInfoByCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWechatUserInfoByCodeRequest.ProtoReflect.Descriptor instead.
func (*GetWechatUserInfoByCodeRequest) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{25}
}

func (x *GetWechatUserInfoByCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WechatUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionID    string `protobuf:"bytes,1,opt,name=UnionID,json=unionID,proto3" json:"UnionID,omitempty"`          // 绑定公众平台的ID
	OpenID     string `protobuf:"bytes,2,opt,name=OpenID,json=openID,proto3" json:"OpenID,omitempty"`             // openid
	Nickname   string `protobuf:"bytes,3,opt,name=Nickname,json=nickname,proto3" json:"Nickname,omitempty"`       // 用户昵称
	Sex        int64  `protobuf:"varint,4,opt,name=Sex,json=sex,proto3" json:"Sex,omitempty"`                     // 性别
	HeadimgURL string `protobuf:"bytes,5,opt,name=HeadimgURL,json=headimgURL,proto3" json:"HeadimgURL,omitempty"` // 头像
	UID        int64  `protobuf:"varint,6,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`                     // 用户
	City       string `protobuf:"bytes,7,opt,name=City,json=city,proto3" json:"City,omitempty"`                   // 城市
	Country    string `protobuf:"bytes,8,opt,name=Country,json=country,proto3" json:"Country,omitempty"`          // 国家
}

func (x *WechatUserInfo) Reset() {
	*x = WechatUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_account_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserInfo) ProtoMessage() {}

func (x *WechatUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserInfo.ProtoReflect.Descriptor instead.
func (*WechatUserInfo) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{26}
}

func (x *WechatUserInfo) GetUnionID() string {
	if x != nil {
		return x.UnionID
	}
	return ""
}

func (x *WechatUserInfo) GetOpenID() string {
	if x != nil {
		return x.OpenID
	}
	return ""
}

func (x *WechatUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatUserInfo) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WechatUserInfo) GetHeadimgURL() string {
	if x != nil {
		return x.HeadimgURL
	}
	return ""
}

func (x *WechatUserInfo) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *WechatUserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatUserInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

var File_account_account_proto protoreflect.FileDescriptor

var file_account_account_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xc5, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x51, 0x49,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x51, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xf2, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x22, 0x58, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1c,
	0x0a, 0x08, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x49, 0x44, 0x22, 0x1f, 0x0a, 0x09,
	0x55, 0x49, 0x44, 0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x49, 0x44,
	0x53, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x49, 0x44, 0x53, 0x22, 0x3b, 0x0a,
	0x11, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x50, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x74, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x21, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x68, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x50, 0x61, 0x73, 0x73, 0x6f, 0x77, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x72, 0x65, 0x73, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2e, 0x0a, 0x14,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x22, 0x44, 0x0a, 0x1a,
	0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x49, 0x44, 0x22, 0x62, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x49, 0x44, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x51, 0x51, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x51, 0x49, 0x64,
	0x22, 0x49, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x14, 0x56,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x50, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x56, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x56,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x6e, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x6e, 0x6f, 0x63, 0x6b, 0x22,
	0x5a, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x0b, 0x4e,
	0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x4e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x45, 0x55, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x55, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x50,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x49, 0x44, 0x22, 0x41, 0x0a,
	0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x2a, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0xd0, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x55, 0x52, 0x4c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x55,
	0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x2a, 0x3a, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x10, 0x03, 0x2a, 0xc5,
	0x02, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xc1, 0x84, 0x3d, 0x12, 0x16,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0xc2, 0x84, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc3, 0x84, 0x3d, 0x12, 0x17,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x10, 0xc4, 0x84, 0x3d, 0x12, 0x18, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0xc5, 0x84,
	0x3d, 0x12, 0x14, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x10, 0xc6, 0x84, 0x3d, 0x12, 0x14, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0xc7, 0x84, 0x3d, 0x12, 0x1d, 0x0a,
	0x17, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc8, 0x84, 0x3d, 0x12, 0x24, 0x0a, 0x1e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc9,
	0x84, 0x3d, 0x12, 0x24, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x10, 0xca, 0x84, 0x3d, 0x12, 0x1c, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x61, 0x70, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0xcb, 0x84, 0x3d, 0x32, 0x8a, 0x10, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x56, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x49,
	0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x53,
	0x12, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x49, 0x44, 0x53, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x11, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x50, 0x61, 0x73, 0x73, 0x6f, 0x77, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50,
	0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x53, 0x0a, 0x14, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x14, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x49, 0x44, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x11, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x11, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65,
	0x77, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x55, 0x49, 0x44, 0x12, 0x18,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x56, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12,
	0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_account_proto_rawDescOnce sync.Once
	file_account_account_proto_rawDescData = file_account_account_proto_rawDesc
)

func file_account_account_proto_rawDescGZIP() []byte {
	file_account_account_proto_rawDescOnce.Do(func() {
		file_account_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_account_proto_rawDescData)
	})
	return file_account_account_proto_rawDescData
}

var file_account_account_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_account_account_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_account_account_proto_goTypes = []interface{}{
	(Role)(0),                              // 0: account.Role
	(AccountErrors)(0),                     // 1: account.AccountErrors
	(*UserInfo)(nil),                       // 2: account.UserInfo
	(*UserInfoList)(nil),                   // 3: account.UserInfoList
	(*PutUserBaseRequest)(nil),             // 4: account.PutUserBaseRequest
	(*UserInfoWithToken)(nil),              // 5: account.UserInfoWithToken
	(*UIDInput)(nil),                       // 6: account.UIDInput
	(*UIDSInput)(nil),                      // 7: account.UIDSInput
	(*OauthLoginRequest)(nil),              // 8: account.OauthLoginRequest
	(*ErrorResponse)(nil),                  // 9: account.ErrorResponse
	(*CreateUserInput)(nil),                // 10: account.CreateUserInput
	(*UserLoginRequest)(nil),               // 11: account.UserLoginRequest
	(*UserToken)(nil),                      // 12: account.UserToken
	(*PutPassowrdRequest)(nil),             // 13: account.PutPassowrdRequest
	(*PasswordRandomStatus)(nil),           // 14: account.PasswordRandomStatus
	(*PutUserContactEmailRequest)(nil),     // 15: account.PutUserContactEmailRequest
	(*PutUserContactPhoneRequest)(nil),     // 16: account.PutUserContactPhoneRequest
	(*UserContact)(nil),                    // 17: account.UserContact
	(*SetUserRoleRequest)(nil),             // 18: account.SetUserRoleRequest
	(*VaptchaVerifyRequest)(nil),           // 19: account.VaptchaVerifyRequest
	(*VaptchaVerifyOfflineRequest)(nil),    // 20: account.VaptchaVerifyOfflineRequest
	(*NewRoleRequest)(nil),                 // 21: account.NewRoleRequest
	(*NewRoleList)(nil),                    // 22: account.NewRoleList
	(*PermissionInfo)(nil),                 // 23: account.PermissionInfo
	(*PermissionInfoList)(nil),             // 24: account.PermissionInfoList
	(*GetWechatAccessTokenRequest)(nil),    // 25: account.GetWechatAccessTokenRequest
	(*CommonResponse)(nil),                 // 26: account.CommonResponse
	(*GetWechatUserInfoByCodeRequest)(nil), // 27: account.GetWechatUserInfoByCodeRequest
	(*WechatUserInfo)(nil),                 // 28: account.WechatUserInfo
}
var file_account_account_proto_depIdxs = []int32{
	21, // 0: account.UserInfo.Roles:type_name -> account.NewRoleRequest
	2,  // 1: account.UserInfoList.List:type_name -> account.UserInfo
	2,  // 2: account.UserInfoWithToken.UserInfo:type_name -> account.UserInfo
	1,  // 3: account.ErrorResponse.ErrorInfo:type_name -> account.AccountErrors
	0,  // 4: account.SetUserRoleRequest.Role:type_name -> account.Role
	21, // 5: account.NewRoleList.List:type_name -> account.NewRoleRequest
	23, // 6: account.PermissionInfoList.List:type_name -> account.PermissionInfo
	6,  // 7: account.AccountSV.GetUserInfo:input_type -> account.UIDInput
	7,  // 8: account.AccountSV.GetUsersInfoByIDS:input_type -> account.UIDSInput
	12, // 9: account.AccountSV.GetUserInfoByToken:input_type -> account.UserToken
	10, // 10: account.AccountSV.CreateUserInfoByLoginName:input_type -> account.CreateUserInput
	11, // 11: account.AccountSV.GetUserToken:input_type -> account.UserLoginRequest
	2,  // 12: account.AccountSV.CheckNickname:input_type -> account.UserInfo
	2,  // 13: account.AccountSV.CheckPhone:input_type -> account.UserInfo
	2,  // 14: account.AccountSV.CheckEmail:input_type -> account.UserInfo
	2,  // 15: account.AccountSV.CheckLoginName:input_type -> account.UserInfo
	13, // 16: account.AccountSV.PutUserPassword:input_type -> account.PutPassowrdRequest
	4,  // 17: account.AccountSV.PutUserBaseInfo:input_type -> account.PutUserBaseRequest
	8,  // 18: account.AccountSV.GetUserTokenByOauthCode:input_type -> account.OauthLoginRequest
	6,  // 19: account.AccountSV.GetUserPasswordRandomStatus:input_type -> account.UIDInput
	15, // 20: account.AccountSV.BindUserContactEmail:input_type -> account.PutUserContactEmailRequest
	16, // 21: account.AccountSV.BindUserContactPhone:input_type -> account.PutUserContactPhoneRequest
	6,  // 22: account.AccountSV.GetUserContactInfo:input_type -> account.UIDInput
	6,  // 23: account.AccountSV.GetUserNewRoles:input_type -> account.UIDInput
	6,  // 24: account.AccountSV.GetUserPermissions:input_type -> account.UIDInput
	18, // 25: account.AccountSV.SetUserRole:input_type -> account.SetUserRoleRequest
	18, // 26: account.AccountSV.DelUserRole:input_type -> account.SetUserRoleRequest
	21, // 27: account.AccountSV.PostNewRole:input_type -> account.NewRoleRequest
	21, // 28: account.AccountSV.PutNewRole:input_type -> account.NewRoleRequest
	21, // 29: account.AccountSV.DelNewRole:input_type -> account.NewRoleRequest
	21, // 30: account.AccountSV.GetNewRoles:input_type -> account.NewRoleRequest
	10, // 31: account.AccountSV.GetUserUID:input_type -> account.CreateUserInput
	19, // 32: account.AccountSV.GetVaptchaVerify:input_type -> account.VaptchaVerifyRequest
	20, // 33: account.AccountSV.GetVaptchaOfflineVerify:input_type -> account.VaptchaVerifyOfflineRequest
	25, // 34: account.AccountSV.GetWechatAccessToken:input_type -> account.GetWechatAccessTokenRequest
	27, // 35: account.AccountSV.GetWechatUserInfoByCode:input_type -> account.GetWechatUserInfoByCodeRequest
	2,  // 36: account.AccountSV.GetUserInfo:output_type -> account.UserInfo
	3,  // 37: account.AccountSV.GetUsersInfoByIDS:output_type -> account.UserInfoList
	2,  // 38: account.AccountSV.GetUserInfoByToken:output_type -> account.UserInfo
	9,  // 39: account.AccountSV.CreateUserInfoByLoginName:output_type -> account.ErrorResponse
	5,  // 40: account.AccountSV.GetUserToken:output_type -> account.UserInfoWithToken
	9,  // 41: account.AccountSV.CheckNickname:output_type -> account.ErrorResponse
	9,  // 42: account.AccountSV.CheckPhone:output_type -> account.ErrorResponse
	9,  // 43: account.AccountSV.CheckEmail:output_type -> account.ErrorResponse
	9,  // 44: account.AccountSV.CheckLoginName:output_type -> account.ErrorResponse
	9,  // 45: account.AccountSV.PutUserPassword:output_type -> account.ErrorResponse
	9,  // 46: account.AccountSV.PutUserBaseInfo:output_type -> account.ErrorResponse
	5,  // 47: account.AccountSV.GetUserTokenByOauthCode:output_type -> account.UserInfoWithToken
	14, // 48: account.AccountSV.GetUserPasswordRandomStatus:output_type -> account.PasswordRandomStatus
	9,  // 49: account.AccountSV.BindUserContactEmail:output_type -> account.ErrorResponse
	9,  // 50: account.AccountSV.BindUserContactPhone:output_type -> account.ErrorResponse
	17, // 51: account.AccountSV.GetUserContactInfo:output_type -> account.UserContact
	22, // 52: account.AccountSV.GetUserNewRoles:output_type -> account.NewRoleList
	24, // 53: account.AccountSV.GetUserPermissions:output_type -> account.PermissionInfoList
	9,  // 54: account.AccountSV.SetUserRole:output_type -> account.ErrorResponse
	9,  // 55: account.AccountSV.DelUserRole:output_type -> account.ErrorResponse
	9,  // 56: account.AccountSV.PostNewRole:output_type -> account.ErrorResponse
	9,  // 57: account.AccountSV.PutNewRole:output_type -> account.ErrorResponse
	9,  // 58: account.AccountSV.DelNewRole:output_type -> account.ErrorResponse
	22, // 59: account.AccountSV.GetNewRoles:output_type -> account.NewRoleList
	6,  // 60: account.AccountSV.GetUserUID:output_type -> account.UIDInput
	9,  // 61: account.AccountSV.GetVaptchaVerify:output_type -> account.ErrorResponse
	9,  // 62: account.AccountSV.GetVaptchaOfflineVerify:output_type -> account.ErrorResponse
	26, // 63: account.AccountSV.GetWechatAccessToken:output_type -> account.CommonResponse
	28, // 64: account.AccountSV.GetWechatUserInfoByCode:output_type -> account.WechatUserInfo
	36, // [36:65] is the sub-list for method output_type
	7,  // [7:36] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_account_account_proto_init() }
func file_account_account_proto_init() {
	if File_account_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_account_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUserBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoWithToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDSInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutPassowrdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordRandomStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUserContactEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutUserContactPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaptchaVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaptchaVerifyOfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWechatAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWechatUserInfoByCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_account_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_account_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_account_proto_goTypes,
		DependencyIndexes: file_account_account_proto_depIdxs,
		EnumInfos:         file_account_account_proto_enumTypes,
		MessageInfos:      file_account_account_proto_msgTypes,
	}.Build()
	File_account_account_proto = out.File
	file_account_account_proto_rawDesc = nil
	file_account_account_proto_goTypes = nil
	file_account_account_proto_depIdxs = nil
}
