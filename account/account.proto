syntax = "proto3";


package account;


message UserInfo {
    int64 Id                        = 1;    // id
    string LoginName                = 2;    // 登录
    string Nickname                 = 3;    // 昵称
    int64 Age                       = 4;    // 年龄
    int64 Gender                    = 5;    // 性别
    string Avatar                   = 6;    // 头像
    string Location                 = 7;    // 位置
    string Profession               = 8;    // 职业
    int64  Status                   = 9;    // 状态
    string Brief                    = 12;   // 简介
    string Email                    = 13;   // 邮箱
    string Phone                    = 14;   // 手机号
    string PhoneCode                = 15;   // 手机区号
    string WeChatId                 = 16;   // 微信id
    string QQId                     = 17;   // qqid
    string Password                 = 18;   // 用户加密后的密码
    repeated RoleInfo Roles         = 19;   // 用户角色信息
}

message UserInfoWithToken {
    UserInfo UserInfo               = 1;
    string   Token                  = 2;
}

// id查询用户信息
message UIDInput {
    int64 UID                       = 1;    // 用户id
}

message RoleInfo {
    string Role                     = 1;
    string Description              = 2;
}

// 第三方登录请求
message OauthLoginRequest {
    string Type                     = 1; // 类型
    string Code                     = 2; // 授权code
}

// 错误码定义 累计7位 账户服务使用 100 [第一位1表示账户模块，第二位表示子模块(表)] ，后四位自由发挥qaq
// 100
enum AccountErrors {
    None                            = 0;  // 默认值
    UserNotFound                    = 1000001;  // 用户不存在
    UserCreateFailed                = 1000002;  // 创建用户失败
    UserUpdateFailed                = 1000003;  // 更新用户失败
    UserNicknameExist               = 1000004;  // 用户昵称存在
    UserLoginNameExist              = 1000005;  // 用户登录名称存在
    UserPhoneExist                  = 1000006;  // 用户手机号存在
    UserEmailExist                  = 1000007;  // 用户邮箱号存在
    UserPasswordCheckFailed         = 1000008;  // 用户密码不匹配
    UserBindUserContactEmailFailed  = 1000009;  // 用户绑定邮箱失败
}

message ErrorResponse {
    AccountErrors ErrorInfo         = 1;
}
// 创建用户
message CreateUserInput {
    string Type                     = 1; // 类型 用户名、手机号、邮箱
    string Value                    = 2; // 值
    string Password                 = 3; // 密码
    string Nickname                 = 7; // 昵称
    string Extension                = 4; // 扩展字段 比如手机的地区码
    string IP                       = 5; // ip字段
    string RegisterFrom             = 6; // 注册渠道
}
// 用户登录
message UserLoginRequest {
    string Type                     = 1;  // 登录类型
    string Value                    = 2;  // 登录类型值
    string Password                 = 3;  // 登录密码
    bool   Validate                 = 4;  // 密码校验
}

message UserToken {
    string Token        = 1;  // 用户token
}

// 更新用户密码
message PutPassowrdRequest {
    int64 UID                       = 1; // 用户id
    string Password                 = 2; // 用户的老密码
    string FreshPassword            = 3; // 用户的新密码
}

// 获取用户密码是否是随机生成的
message PasswordRandomStatus {
    int64 Random                    = 1; // 用户的密码是否是随机生成的 如果是1 就是随机的 2就不是随机
}

message PutUserNicknameRequest {
    int64 UID                       = 1; // 用户id
    string Nickname                 = 2; // 用户昵称
}

message PutUserAvatarRequest {
    int64 UID                       = 1; // 用户id
    string Avatar                   = 2; // 用户头像
}

message PutUserLoginNameRequest {
    int64 UID                       = 1; // 用户id
    string LoginName                = 2; // 用户头像
}

message PutUserContactEmailRequest {
    string Email                    = 1; // 邮箱
    int64 UID                       = 2; // 用户id 
}

message PutUserContactPhoneRequest {
    string Phone                    = 1; // 手机
    string PhoneCode                = 2; // 区号
    int64 UID                       = 3; // 用户id 
}


service AccountSV {
    // 查询用户信息
    rpc GetUserInfo(UIDInput) returns (UserInfo){}

    // 通过UserToken获取用户信息
    rpc GetUserInfoByToken(UserToken) returns (UserInfo){}

    // 创建用户
    rpc CreateUserInfoByLoginName(CreateUserInput) returns (ErrorResponse){}

    // 用户登录
    rpc GetUserToken(UserLoginRequest) returns (UserInfoWithToken){}

    // 检查昵称是否被使用
    rpc CheckNickname(UserInfo) returns (ErrorResponse){}

    // 检查手机是否被绑定
    rpc CheckPhone(UserInfo) returns (ErrorResponse){}

    // 检查邮箱是否被绑定
    rpc CheckEmail(UserInfo) returns (ErrorResponse){}

    // 检查用户名是否被使用
    rpc CheckLoginName(UserInfo) returns (ErrorResponse){}

    // 更新用户密码
    rpc PutUserPassword(PutPassowrdRequest) returns (ErrorResponse){}

    // 更新用户昵称
    rpc PutUserNickname(PutUserNicknameRequest) returns (ErrorResponse){}

    // 更新用户头像
    rpc PutUserAvatar(PutUserAvatarRequest) returns (ErrorResponse){}

    // 更新用户用户名
    rpc PutUserLoginName(PutUserLoginNameRequest) returns (ErrorResponse){}

    // 通过第三方code获取用户token注册第账户
    rpc GetUserTokenByOauthCode(OauthLoginRequest) returns (UserInfoWithToken){}
    
    // 获取用户密码状态
    rpc GetUserPasswordRandomStatus (UIDInput) returns (PasswordRandomStatus);

    // 绑定邮箱
    rpc BindUserContactEmail (PutUserContactEmailRequest) returns (ErrorResponse);

    // 绑定手机号
    rpc BindUserContactPhone (PutUserContactPhoneRequest) returns (ErrorResponse);

}
